<!DOCTYPE html>
<html lang="en">
  <head>
    <script
      async
      src="https://www.googletagmanager.com/gtag/js?id=G-5899C1DJM0"
    ></script>
    <script>
      function gtag() {
        dataLayer.push(arguments)
      }
      ;(window.dataLayer = window.dataLayer || []),
        gtag('js', new Date()),
        gtag('config', 'G-5899C1DJM0')
    </script>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <link
      rel="apple-touch-icon"
      sizes="57x57"
      href="/roulette/apple-icon-57x57.d2489b05.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="60x60"
      href="/roulette/apple-icon-60x60.c256c4c3.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="72x72"
      href="/roulette/apple-icon-72x72.3c7457a3.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="76x76"
      href="/roulette/apple-icon-76x76.c458ac0e.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="114x114"
      href="/roulette/apple-icon-114x114.2a406841.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="120x120"
      href="/roulette/apple-icon-120x120.baa4374c.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="144x144"
      href="/roulette/apple-icon-144x144.b352f2ad.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="152x152"
      href="/roulette/apple-icon-152x152.3ed1a2e0.png"
    />
    <link
      rel="apple-touch-icon"
      sizes="180x180"
      href="/roulette/apple-icon-180x180.1794adb6.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="192x192"
      href="/roulette/android-icon-192x192.1cb445bf.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="32x32"
      href="/roulette/favicon-32x32.ca213894.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="96x96"
      href="/roulette/favicon-96x96.0b3c763e.png"
    />
    <link
      rel="icon"
      type="image/png"
      sizes="16x16"
      href="/roulette/favicon-16x16.e4bfc49f.png"
    />
    <link rel="manifest" href="/roulette/assets/manifest.webmanifest" />
    <meta name="msapplication-TileColor" content="#ffffff" />
    <meta
      name="msapplication-TileImage"
      content="/roulette/assets/ms-icon-144x144.png"
    />
    <meta name="theme-color" content="#ffffff" />
    <title><%= title %></title>
    <style>
      @import url('https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@400;600&display=swap');
      * {
        box-sizing: border-box;
        font-family: 'IBM Plex Sans KR', sans-serif;
      }

      canvas {
        position: fixed;
        inset: 0;
        width: 100%;
        height: 100%;
      }
      #rankings {
        position: absolute;
        top: 50%;
        left: 50%;
        display: flex;
        flex-direction: column;
        align-items: center;
        transform: translate(-35%, -50%);
        z-index: 10;
        padding: 1rem 3rem;
        box-shadow: inset 0 0 6rem 4px #fff5ef;
        border: 2px solid #f38c0e;
        background: #ffffff;
        border-radius: 0.75em;
        color: #000;
        min-height: 449px;
        width: 30rem;
        font-size: 1.7rem;
        font-weight: bold;
        transition: all 1s ease-in-out;
      }
      #rankings ul {
        margin: 0;
        padding: 0;
        list-style-type: none;
        position: relative;
        bottom: -2rem;
      }

      #rankings h2 {
        margin: 0;
        position: relative;
        top: 0rem;
      }
      .settings {
        transition: all 1s ease-in-out;
        position: absolute;
        top: 50%;
        left: 35%;
        transform: translate(-15%, -50%);
        padding: 1rem;
        border-radius: 0.75em;
        box-shadow: inset 0 0 6rem 4px #f27127;
        border: 2px solid #f38c0e;
        background: #d9a84e;
        backdrop-filter: blur(10px);
        color: #000;
        font-size: 1rem;
        font-weight: bold;
        z-index: 11;
      }
      .hide {
        display: none !important;
      }
      .hideY {
        transform: translateY(-300%) !important;
      }

      .settings:focus-within {
        box-shadow: inset 0 0 2rem 4px #f27127;
      }
      .settings textarea {
        width: 100%;
        min-height: 20rem;
        background-color: transparent;
        border: none;
        outline: none;
        font: inherit;
        color: inherit;
      }
      .settings .actions {
        font-size: 0.8rem;
        text-align: right;
        display: flex;
        justify-content: space-between;
      }
      .settings .buttons {
        display: flex;
        gap: 0.5rem;
      }
      .settings .actions label {
        font-size: 1.1rem;
        display: flex;
      }
      .settings button {
        padding: 0.25rem 0.75rem;
        font-size: 1rem;
        border-radius: 10px;
        border: 0;
      }

      .settings button:hover {
        cursor: pointer;
        background-color: rgb(218, 218, 218);
      }

      .settings .text {
        margin-top: 0;
        font-size: 1rem;
        font-weight: normal;
        line-height: 1.2rem;
        color: #000;
      }

      input[type='number'] {
        width: 3rem;
        text-align: center;
        background-color: transparent;
        border: none;
        outline: none;
        font: inherit;
        color: inherit;
      }
      #inGame {
        width: fit-content;
      }

      /* @media screen and (min-width: 768px) {
        .settings {
          top: auto;
          bottom: 24px;
          max-width: 50%;
        }
        
      } */

      div.copyright {
        position: fixed;
        bottom: 0;
        left: 50%;
        transform: translateX(-50%);
        color: white;
        font-size: 12px;
        z-index: 999;
      }

      div.copyright a {
        color: white;
      }

      #btnShake {
        font-size: 2em;
      }
      /*  div#notice {
        z-index: 999;
        max-width: 100%;
        width: 40em;
        background: #fffc;
        flex-direction: column;
        padding: 1em;
        display: flex;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
      }
      div#notice button {
        width: 50%;
        align-self: flex-end;
        padding: 1em;
      }
      div#notice dt {
        font-weight: 700;
      }
      div#notice dd {
        padding-bottom: 0.5em;
        list-style: disc;
      } */
    </style>
  </head>
  <body>
    <script type="module" src="/roulette/index.63fa6fff.js"></script>
    <!-- Optional JavaScript -->
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript">
      function getNames() {
        return document
          .querySelector('#in_names')
          .value.trim()
          .split(/[,\r\n]/g)
          .map((e) => e.trim())
          .filter((e) => !!e)
      }
      function parseName(e) {
        const t = /(\/\d+)/,
          n = /(\*\d+)/,
          o = t.test(e),
          r = n.test(e)
        return {
          name: /^\s*([^\/*]+)?/.exec(e)[1],
          weight: o ? parseInt(t.exec(e)[1].replace('/', '')) : 1,
          count: r ? parseInt(n.exec(e)[1].replace('*', '')) : 1,
        }
      }
      function getReady() {
        const e = getNames()
        window.roullete.setMarbles(e), (ready = e.length > 0)
      }
      function setWinnerRank(e) {
        ;(document.querySelector('#in_winningRank').value = e),
          (window.options.winningRank = e - 1),
          window.roullete.setWinningRank(window.options.winningRank)
      }
      function getRank() {
        const e = getNames()
        let parsedNames = new Object()
        let rankArr = []

        if (e.length > 0) {
          console.log(e.length)
          e.forEach((name) => {
            let dd = parseName(name)
            if (Object.keys(parsedNames).includes(dd.name)) {
              parsedNames[dd.name].count += dd.count
            } else {
              parsedNames[dd.name] = { name: dd.name, count: dd.count }
            }
          })
          for (var name in parsedNames) {
            rankArr.push(parsedNames[name])
          }
          rankArr.sort(function (a, b) {
            return b.count - a.count
          })
          for (var i in rankArr) {
            rankArr[i].rank = Number(i) + 1
          }
          return rankArr
        } else {
          return
        }
      }
      function inputNameFn() {
        const e = getNames(),
          t = new Set(),
          n = {}
        e.forEach((e) => {
          const o = parseName(e),
            r = o.weight > 1 ? `${o.name}/${o.weight}` : o.name
          t.has(r) || (t.add(r), (n[r] = 0)), (n[r] += o.count)
        })
        const o = []
        Object.keys(n).forEach((e) => {
          n[e] > 1 ? o.push(`${e}*${n[e]}`) : o.push(e)
        }),
          (document.querySelector('#in_names').value = o.join(',')),
          renderRank(),
          getReady()
        if (document.querySelector('#in_names').value) {
          ;(document.querySelector('#rankings').style.transform =
            'translate(23%, -50%)'),
            (document.querySelector('#settings').style.transform =
              'translate(-40%, -50%)')
        } else {
          ;(document.querySelector('#rankings').style.transform =
            'translate(-35%, -50%)'),
            (document.querySelector('#settings').style.transform =
              'translate(-15%, -50%)')
        }
      }
      function renderRank() {
        const rank = getRank()
        const ul = document.querySelector('#rankings > ul')
        ul.replaceChildren()
        if (rank) {
          for (var i in rank) {
            if (i > 4) {
              console.log("it's over Out!")
              return
            }
            const li = document.createElement('li')
            li.innerText = `#${rank[i].rank} ${rank[i].name} ${rank[i].count}개`
            ul.appendChild(li)
          }
        }
      }
      let ready = !1
      document.addEventListener('DOMContentLoaded', () => {
        document.querySelector('#in_names').addEventListener('change', () => {
          getReady()
        }),
          document.querySelector('#in_names').addEventListener('blur', () => {
            inputNameFn()
          }),
          document
            .querySelector('#btnShuffle')
            .addEventListener('click', () => {
              inputNameFn()
            }),
          document.querySelector('#btnStop').addEventListener('click', () => {
            window.roullete.reset(), (ready = !1)
          }),
          document.querySelector('#btnStart').addEventListener('click', () => {
            if (!document.querySelector('#in_names').value == '') {
              document.querySelector('#settings').classList.add('hideY'),
                document.querySelector('#rankings').classList.add('hideY')
              ready &&
                (gtag('event', 'start', {
                  event_category: 'roulette',
                  event_label: 'start',
                  value: window.roullete.getCount(),
                }),
                window.roullete.start())
            }
          }),
          document
            .querySelector('#chkSkill')
            .addEventListener('change', (e) => {
              ;(window.options.useSkills = e.target.matches(':checked')),
                window.roullete.setWinningRank(window.options.winningRank)
            }),
          document
            .querySelector('#in_winningRank')
            .addEventListener('change', (e) => {
              const t = parseInt(e.target.value, 10)
              setWinnerRank(isNaN(t) ? 0 : t)
            }),
          document
            .querySelector('#btnRandomWinner')
            .addEventListener('click', () => {
              const e = window.roullete.getCount()
              setWinnerRank(Math.floor(Math.random() * e + 1))
            }),
          document.querySelector('#btnShake').addEventListener('click', () => {
            window.roullete.shake(),
              gtag('event', 'shake', {
                event_category: 'roulette',
                event_label: 'shake',
                value: 1,
              })
          }),
          window.roullete.addEventListener('goal', () => {
            ;(ready = !1),
              document.querySelector('#settings').classList.remove('hideY')
            document.querySelector('#rankings').classList.remove('hideY')
          }),
          window.roullete.addEventListener('shakeAvailableChanged', (e) => {
            document
              .querySelector('#inGame')
              .classList.toggle('hide', !e.detail)
          }),
          document.querySelector('#btnShuffle').click()
      })
    </script>
    <script type="text/javascript">
      const socket = io.connect('http://<%= addr %>:<%= port %>', {
        path: '/socket.io',
        transports: ['websocket'],
      })
      socket.on('roulette_default', async (msg) => {
        // document.querySelector('#in_names').value = msg
        console.log(msg)
      })
      socket.on('news', async (msg) => {
        console.log(msg)
        if (!document.querySelector('#settings').classList.contains('hideY')) {
          if (document.querySelector('#in_names').value == '') {
            document.querySelector('#in_names').value += msg.msg
          } else {
            document.querySelector('#in_names').value += `,${msg.msg}`
          }

          inputNameFn()
        }
      })
    </script>
    <div id="settings" class="settings">
      <p class="text">
        각 이름 뒤에 슬래시로 숫자를 붙여 각 멤버에 대한 가중치 값을 설정할 수
        있습니다. (ex: Tom/2, Jane/5)<br />
        각 이름 뒤에 별이 있는 숫자를 붙여 각 멤버의 수를 설정할 수 있습니다.
        (ex: Tom*2, Jane*5)
      </p>
      <textarea
        id="in_names"
        placeholder="쉼표나 줄로 구분된 텍스트를 입력하세요"
      >
      </textarea>
      <div class="actions">
        <label>
          당첨 순위는
          <input type="number" id="in_winningRank" value="1" min="1" />번째 구슬
          입니다
        </label>
        <div class="buttons">
          <button id="btnRandomWinner">랜덤 승자</button>
          <label>
            <input type="checkbox" id="chkSkill" checked /> 스킬 사용
          </label>
          <button id="btnStop">Stop</button> <button id="btnStart">시작</button>
          <button id="btnShuffle">리셋</button>
        </div>
      </div>
      <!--  <img
        src="/images/roulette/marble_body.png"
        alt=""
        width="100px"
        height="100px"
        style="z-index: 11"
      /> -->
    </div>

    <div id="rankings">
      <h2 style="text-align: center">랭킹</h2>
      <ul></ul>
    </div>
    <div id="inGame" class="hide settings">
      <button id="btnShake">Shake!</button>
    </div>
    <div class="copyright">
      &copy; 2023.<a href="https://lazygyu.net" target="_blank">lazygyu</a>
    </div>
  </body>
</html>
